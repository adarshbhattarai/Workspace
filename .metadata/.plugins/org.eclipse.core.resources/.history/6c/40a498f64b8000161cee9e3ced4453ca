package Programming_Assignment_2;

import java.util.*;

public class CoveringSegments {

    private static int[] optimalPoints(Segment[] segments) {
       
    	
    	
    	int[] points = new int[2 * segments.length];
        for (int i = 0; i < segments.length; i++) {
            points[2 * i] = segments[i].start;
            points[2 * i + 1] = segments[i].end;
        }
        
        
        for(int i=0; i<points.length;i=i+2){
        	int minimum = points[i];
        	for(int j=i+2; j<points.length; j=j+2){
        		if(points[j]<minimum){
        			minimum = points[j];
        			int tempa = points[j];
        			int tempb = points[j+1];
        			points[j] = points[i];
        			points[j+1]= points[i+1];
        			points[i]=tempa;
        			points[i+1]=tempb;
        			
        		}
        	}
        }
        
        
        return points;
    }

    private static class Segment {
        int start, end;

        Segment(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }
    public static void main(String[] args) {
       /* Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Segment[] segments = new Segment[n];
        for (int i = 0; i < n; i++) {
            int start, end;
            start = scanner.nextInt();
            end = scanner.nextInt();
            segments[i] = new Segment(start, end);
        }
        int[] points = optimalPoints(segments);
        System.out.println(points.length);
        for (int point : points) {
            System.out.print(point + " ");
        }*/
    	int n=  Math.floor(Math.random() * 101)
    }
}
 
