package Programming_Assignment_2;

import java.util.*;

public class CoveringSegments {

    private static int[] optimalPoints(Segment[] segments) {
       
    	ArrayList<Integer> arrays = new ArrayList<>();
    	
    	int[] points = new int[2 * segments.length];
        for (int i = 0; i < segments.length; i++) {
            points[2 * i] = segments[i].start;
            points[2 * i + 1] = segments[i].end;
        }
        
        
        for(int i=1; i<points.length;i=i+2){
        	int minimum = points[i];
        	for(int j=i+2; j<points.length; j=j+2){
        		if(points[j]<minimum){
        			minimum = points[j];
        			int tempa = points[j-1];
        			int tempb = points[j];
        			points[j-1] = points[i-1];
        			points[j]= points[i];
        			points[i-1]=tempa;
        			points[i]=tempb;
        			
        		}
        	}
        }
        
        int i = 1;
        int j=1;
        while(j<points.length){
        	int initialendPoint = points[i];
        	if(initialendPoint <= points[j+2]  && initialendPoint>= points[j+1]){
        		j=j+2;
        	}
        	if(initialendPoint < points[j+1]){
        		arrays.add(initialendPoint);
        		i=j+2;
        		j=j+2;
        	}
        	
        }
        int[] array = new int[arrays.size()];
        arrays.toArray();
        
        
      
        
        
        return arrays.toArray();
    }

    private static class Segment {
        int start, end;

        Segment(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }
    public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Segment[] segments = new Segment[n];
        for (int i = 0; i < n; i++) {
            int start, end;
            start = scanner.nextInt();
            end = scanner.nextInt();
            segments[i] = new Segment(start, end);
        }
        int[] points = optimalPoints(segments);
        System.out.println(points.length);
        for (int point : points) {
            System.out.print(point + " ");
        }
        
        
    	/*int a=0;
    	while(a<1){
    		
    		int n= (int) Math.floor(Math.random() * 10);
    		System.out.println(n);
    		Segment[] segments = new Segment[n];
            for (int i = 0; i < n; i++) {
             int start, end;
             start = (int) Math.floor(Math.random() * 101);
             end = (int) Math.floor(Math.random() * 101);
            segments[i] = new Segment(start, end);
            System.out.print(start + " " + end + " ");
            System.out.println("");
            }
            int[] points = optimalPoints(segments);
            System.out.println(points.length);
            for (int point : points) {
                System.out.print(point + " ");
            }
            a++;
    		
    	}*/
    
    	
    	
    }
}