package sorts;

import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;



public class Merge_sort {
				
	public static void main(String[] args) {
		Scanner n = new Scanner(System.in);
		int number = n.nextInt();
		int [] array = new int[number];
		for (int i = 0; i < number; i++) {
			array[i] = (int) Math.floor(Math.random()*100);
			System.out.print(array[i] + " ");
		}
		System.out.println(" ");
		System.out.println(mergeSort(array));
	}

	private static int[] mergeSort(int[] array) {
		// TODO Auto-generated method stub
		if(array.length==1) return array;
		int m = (int)Math.floor(array.length/2);
		int [] b = new int[m];
		int [] c = new int[array.length-m];
		int [] resultArray = new int[array.length];
		for(int i=0; i<m ; i++){
			b[i] = array[i];
		}
		for(int i=0;i< c.length; i++){
			c[i] = array[m+ i];
		}	
		int[] first_array = mergeSort(b);
		int[] second_array = mergeSort(c);
		resultArray = Merge(first_array,second_array);
		return resultArray;
	}

	private static int[] Merge(int[] a, int[] b) {
		// TODO Auto-generated method stub
		int[] d = new int[a.length + b.length];
		int i=0;
		int j=0;
		int k=0;
		while(k<d.length-1){
			System.out.println(d[k]);
			if(i< a.length && a[i]<b[j]){
				d[k++] = a[i++];
			}
			/*if(i == a.length-1) d[k++] = b[j++];
			
			if(a[i]<b[j] || j==b.length-1) {
				
			}
			else{
				d[k++] = b[j++];
			}*/

		}
		return d;
	}

}
